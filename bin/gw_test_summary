#!/bin/bash -l

#
# LIGO daily summary page script
#
# Author: Duncan Macleod <duncan.macleod@ligo.org>
# Modified by: Max
#
# A pipeline is generated using the gw_summary_pipe DAG generator
# before this DAG is submitted to the condor job scheduler
#

. ~/.bash_profile

echo ${X509_USER_PROXY}

REPODIR=${HOME}/summary
CONFIGDIR=${REPODIR}/config
LOGDIR=${TMPDIR}/summary/tstlogs

# MI: not sure what this does...
#if [ "${USER}" == "detchar" ]; then
#    unset X509_USER_PROXY
#fi

# refresh configurations
cd ${REPODIR}
git pull --rebase

rm -r ${CONFIGDIR}/*

# pull from nodus
${REPODIR}/bin/pull40mconfig.exp

# pull from llocds
cd ${CONFIGDIR}
wget --reject "index.html*" --random-wait -e robots=off --load-cookies=${REPODIR}/etc/cookies.txt --recursive --no-parent -l1 --no-directories https://llocds.ligo-la.caltech.edu:443/data/rana.adhikari/gwsumm-config/

# push
cd ${REPODIR}
NOW=$(lalapps_tconvert now)
git add .
git commit -m"auto ${NOW}"
git push

# catch command line options
CLARGS=$@

# set frameCPP environment
export PYTHONPATH=${PYTHONPATH}:/usr/lib/python2.6/site-packages/framecpp:/usr/lib64/python2.6/site-packages/framecpp

# set LALSuite environment
LALSUITE_TAG=de671f
. /home/detchar/opt/lalsuite/${LALSUITE_TAG}/etc/lalsuiterc

# set GWpy environment
. /home/detchar/opt/gwpysoft/etc/gwpy-user-env.sh

echo "Environment set"

cleanpath PYTHONPATH
cleanpath PATH

# set kerberos environment
if [ "${USER}" == "max.isi" ]; then
    export KRB5CCNAME=${TMPDIR}/gw_summary_ligo.org.krb5
    LIGO_USER=max.isi
    export KRB5_KTNAME=${HOME}/.kerberos/max.isi.keytab
    kinit -kft ${KRB5_KTNAME} ${LIGO_USER}@LIGO.ORG 1> /dev/null
    if [ $? -eq 0 ]; then
        echo "Kerberos ticket generated for ${LIGO_USER}"
    else
        EC=$?
        echo "Failed to generate kerberos ticket"
        exit $?
    fi
fi
klist -s
if [ $? -eq 1 ]; then
    echo "gw_summary requires a kerberos ticket, please generate one and try again"
    exit 1
fi
set -e

# set output directory
RUN_DIRECTORY=$HOME/public_html/summtest/
mkdir -p ${RUN_DIRECTORY}
# rm ${RUN_DIRECTORY}gw_summary_pipe.dag*
cd ${RUN_DIRECTORY}
echo "Moved to output directory ${RUN_DIRECTORY}"
echo "----------"

# interpolate IFO
if [[ "$(hostname -f)" == *"ligo-la"* ]]; then
    IFO="L1"
elif [[ "$(hostname -f)" == *"ligo-wa"* ]]; then
    IFO="H1"
elif [[ "$(hostname -f)" == *"ligo.caltech"* ]]; then
    IFO="C1"
elif [[ -z "${IFO}" ]]; then 
    echo "Cannot determine IFO, either give via '--ifo=X1' of set IFO environment variable" >&2
    exit 1
fi

ifo=$(echo $IFO | awk '{print tolower($0)}')

# set configuration
if [[ "${CLARGS}" == *"config-file"* ]]; then
    CONFIGARG=""
    PRIORITYARG=""
else
    # generate option string from files in configuration directory
    ${HOME}/summary/bin/configlist.py ${IFO}
    # load string into CONFIGARG variable
    PRIORITYARG=""
    CONFIGARG=$(<${TMPDIR}/summary/configstr.txt)
fi

# set arguments
DEFAULTCONFIG=${CONFIGDIR}/defaults.ini
UNIVERSE="local"
TIMEOUT="12"
OPTIONS="gps 1099869601 1099870601 --multi-process 20 --verbose --ifo ${IFO} -f ${DEFAULTCONFIG} ${CONFIGARG} ${PRIORITYARG}"
ARGUMENTS=$(eval echo ${CLARGS})

# run job
echo "Executing:"
echo
echo "gw_summary ${OPTIONS} ${ARGUMENTS}"

gw_summary ${OPTIONS} ${ARGUMENTS}
